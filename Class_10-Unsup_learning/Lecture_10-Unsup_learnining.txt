title: 'Class10: Machine Learning Project'
author: "Michael Overton"
date: "2/7/2020"
output: github_document

## Using PCA and heirarchical clustering to investigate data from 

```
## [1] "data.frame"
```

```
## [1] 569  33
```

```
## [1] 212
```

```
##          radius_mean texture_mean perimeter_mean area_mean smoothness_mean
## 842302         17.99        10.38         122.80    1001.0         0.11840
## 842517         20.57        17.77         132.90    1326.0         0.08474
## 84300903       19.69        21.25         130.00    1203.0         0.10960
## 84348301       11.42        20.38          77.58     386.1         0.14250
## 84358402       20.29        14.34         135.10    1297.0         0.10030
## 843786         12.45        15.70          82.57     477.1         0.12780
##          compactness_mean concavity_mean concave.points_mean symmetry_mean
## 842302            0.27760         0.3001             0.14710        0.2419
## 842517            0.07864         0.0869             0.07017        0.1812
## 84300903          0.15990         0.1974             0.12790        0.2069
## 84348301          0.28390         0.2414             0.10520        0.2597
## 84358402          0.13280         0.1980             0.10430        0.1809
## 843786            0.17000         0.1578             0.08089        0.2087
##          fractal_dimension_mean radius_se texture_se perimeter_se area_se
## 842302                  0.07871    1.0950     0.9053        8.589  153.40
## 842517                  0.05667    0.5435     0.7339        3.398   74.08
## 84300903                0.05999    0.7456     0.7869        4.585   94.03
## 84348301                0.09744    0.4956     1.1560        3.445   27.23
## 84358402                0.05883    0.7572     0.7813        5.438   94.44
## 843786                  0.07613    0.3345     0.8902        2.217   27.19
##          smoothness_se compactness_se concavity_se concave.points_se
## 842302        0.006399        0.04904      0.05373           0.01587
## 842517        0.005225        0.01308      0.01860           0.01340
## 84300903      0.006150        0.04006      0.03832           0.02058
## 84348301      0.009110        0.07458      0.05661           0.01867
## 84358402      0.011490        0.02461      0.05688           0.01885
## 843786        0.007510        0.03345      0.03672           0.01137
##          symmetry_se fractal_dimension_se radius_worst texture_worst
## 842302       0.03003             0.006193        25.38         17.33
## 842517       0.01389             0.003532        24.99         23.41
## 84300903     0.02250             0.004571        23.57         25.53
## 84348301     0.05963             0.009208        14.91         26.50
## 84358402     0.01756             0.005115        22.54         16.67
## 843786       0.02165             0.005082        15.47         23.75
##          perimeter_worst area_worst smoothness_worst compactness_worst
## 842302            184.60     2019.0           0.1622            0.6656
## 842517            158.80     1956.0           0.1238            0.1866
## 84300903          152.50     1709.0           0.1444            0.4245
## 84348301           98.87      567.7           0.2098            0.8663
## 84358402          152.20     1575.0           0.1374            0.2050
## 843786            103.40      741.6           0.1791            0.5249
##          concavity_worst concave.points_worst symmetry_worst
## 842302            0.7119               0.2654         0.4601
## 842517            0.2416               0.1860         0.2750
## 84300903          0.4504               0.2430         0.3613
## 84348301          0.6869               0.2575         0.6638
## 84358402          0.4000               0.1625         0.2364
## 843786            0.5355               0.1741         0.3985
##          fractal_dimension_worst
## 842302                   0.11890
## 842517                   0.08902
## 84300903                 0.08758
## 84348301                 0.17300
## 84358402                 0.07678
## 843786                   0.12440
```

Q5. Why do you think we are using the indices 3:32 here?
  The specific sample IDs are converted into the rownames, and we want this to be unsupervised, so we do not
  want to bias our analysis with the final diagnoses, we want to be able to predict malignancy from the data
  

```
## [1] 10
```

```
##             radius_mean            texture_mean          perimeter_mean 
##            1.412729e+01            1.928965e+01            9.196903e+01 
##               area_mean         smoothness_mean        compactness_mean 
##            6.548891e+02            9.636028e-02            1.043410e-01 
##          concavity_mean     concave.points_mean           symmetry_mean 
##            8.879932e-02            4.891915e-02            1.811619e-01 
##  fractal_dimension_mean               radius_se              texture_se 
##            6.279761e-02            4.051721e-01            1.216853e+00 
##            perimeter_se                 area_se           smoothness_se 
##            2.866059e+00            4.033708e+01            7.040979e-03 
##          compactness_se            concavity_se       concave.points_se 
##            2.547814e-02            3.189372e-02            1.179614e-02 
##             symmetry_se    fractal_dimension_se            radius_worst 
##            2.054230e-02            3.794904e-03            1.626919e+01 
##           texture_worst         perimeter_worst              area_worst 
##            2.567722e+01            1.072612e+02            8.805831e+02 
##        smoothness_worst       compactness_worst         concavity_worst 
##            1.323686e-01            2.542650e-01            2.721885e-01 
##    concave.points_worst          symmetry_worst fractal_dimension_worst 
##            1.146062e-01            2.900756e-01            8.394582e-02
```

```
##             radius_mean            texture_mean          perimeter_mean 
##            3.524049e+00            4.301036e+00            2.429898e+01 
##               area_mean         smoothness_mean        compactness_mean 
##            3.519141e+02            1.406413e-02            5.281276e-02 
##          concavity_mean     concave.points_mean           symmetry_mean 
##            7.971981e-02            3.880284e-02            2.741428e-02 
##  fractal_dimension_mean               radius_se              texture_se 
##            7.060363e-03            2.773127e-01            5.516484e-01 
##            perimeter_se                 area_se           smoothness_se 
##            2.021855e+00            4.549101e+01            3.002518e-03 
##          compactness_se            concavity_se       concave.points_se 
##            1.790818e-02            3.018606e-02            6.170285e-03 
##             symmetry_se    fractal_dimension_se            radius_worst 
##            8.266372e-03            2.646071e-03            4.833242e+00 
##           texture_worst         perimeter_worst              area_worst 
##            6.146258e+00            3.360254e+01            5.693570e+02 
##        smoothness_worst       compactness_worst         concavity_worst 
##            2.283243e-02            1.573365e-01            2.086243e-01 
##    concave.points_worst          symmetry_worst fractal_dimension_worst 
##            6.573234e-02            6.186747e-02            1.806127e-02
```

```
## Importance of components:
##                           PC1    PC2     PC3     PC4     PC5     PC6
## Standard deviation     3.6444 2.3857 1.67867 1.40735 1.28403 1.09880
## Proportion of Variance 0.4427 0.1897 0.09393 0.06602 0.05496 0.04025
## Cumulative Proportion  0.4427 0.6324 0.72636 0.79239 0.84734 0.88759
##                            PC7     PC8    PC9    PC10   PC11    PC12
## Standard deviation     0.82172 0.69037 0.6457 0.59219 0.5421 0.51104
## Proportion of Variance 0.02251 0.01589 0.0139 0.01169 0.0098 0.00871
## Cumulative Proportion  0.91010 0.92598 0.9399 0.95157 0.9614 0.97007
##                           PC13    PC14    PC15    PC16    PC17    PC18
## Standard deviation     0.49128 0.39624 0.30681 0.28260 0.24372 0.22939
## Proportion of Variance 0.00805 0.00523 0.00314 0.00266 0.00198 0.00175
## Cumulative Proportion  0.97812 0.98335 0.98649 0.98915 0.99113 0.99288
##                           PC19    PC20   PC21    PC22    PC23   PC24
## Standard deviation     0.22244 0.17652 0.1731 0.16565 0.15602 0.1344
## Proportion of Variance 0.00165 0.00104 0.0010 0.00091 0.00081 0.0006
## Cumulative Proportion  0.99453 0.99557 0.9966 0.99749 0.99830 0.9989
##                           PC25    PC26    PC27    PC28    PC29    PC30
## Standard deviation     0.12442 0.09043 0.08307 0.03987 0.02736 0.01153
## Proportion of Variance 0.00052 0.00027 0.00023 0.00005 0.00002 0.00000
## Cumulative Proportion  0.99942 0.99969 0.99992 0.99997 1.00000 1.00000
```


![plot of chunk unnamed-chunk-3](figure/unnamed-chunk-3-1.png)
Q10. What stands out to you about this plot? Is it easy or difficult to understand? Why?
The plot is extremely cluttered, as ID names are used as points rather than some marker. As well, the various factors influencing the data point locations are numerous and the names are cluttered.


```r
plot(wisc.pr$x, col = (diagnosis=="M")+1, 
     xlab = "PC1", ylab = "PC2")
```

![plot of chunk unnamed-chunk-4](figure/unnamed-chunk-4-1.png)


Q11. Generate a PC1 vs PC2 plot as described above colored by diagnosis. What do the points in this plot represent? What are the red points? Where did this coloring come from and why were these colors chosen by R?
  Each point is a particular biopsy result, the red points are malignant diagnoses. By using the conversion of logical to numeric, R looks up the associated colors in a palette to the values 1 and 0 (or actually, 2 and 1, because we add 1 to the logical) which are 1=black and 2=red.
  


```r
plot(wisc.pr$x[,c(1,3)], col = (diagnosis=="M")+1, 
     xlab = "PC1", ylab = "PC3")
```

![plot of chunk unnamed-chunk-5](figure/unnamed-chunk-5-1.png)

Q12. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?
  PC3 is less informative than PC2. There is less partitioning of the datapoints in PC3
  

```r
pr.var <- wisc.pr$sdev^2
pve <- pr.var / sum(pr.var)


plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

![plot of chunk unnamed-chunk-6](figure/unnamed-chunk-6-1.png)

```r
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

![plot of chunk unnamed-chunk-6](figure/unnamed-chunk-6-2.png)
  

```r
library(factoextra)
```

```
## Loading required package: ggplot2
```

```
## Welcome! Related Books: `Practical Guide To Cluster Analysis in R` at https://goo.gl/13EFCZ
```

```r
fviz_eig(wisc.pr, addlabels = TRUE)
```

![plot of chunk unnamed-chunk-7](figure/unnamed-chunk-7-1.png)



```r
wisc.pr$rotation[,1][["radius_mean"]]
```

```
## [1] -0.2189024
```

```r
wisc.pr$rotation[,1][["smoothness_se"]]
```

```
## [1] -0.01453145
```

```r
max(abs(wisc.pr$rotation[,1]))
```

```
## [1] 0.2608538
```

```r
wisc.pr$rotation[,1]
```

```
##             radius_mean            texture_mean          perimeter_mean 
##             -0.21890244             -0.10372458             -0.22753729 
##               area_mean         smoothness_mean        compactness_mean 
##             -0.22099499             -0.14258969             -0.23928535 
##          concavity_mean     concave.points_mean           symmetry_mean 
##             -0.25840048             -0.26085376             -0.13816696 
##  fractal_dimension_mean               radius_se              texture_se 
##             -0.06436335             -0.20597878             -0.01742803 
##            perimeter_se                 area_se           smoothness_se 
##             -0.21132592             -0.20286964             -0.01453145 
##          compactness_se            concavity_se       concave.points_se 
##             -0.17039345             -0.15358979             -0.18341740 
##             symmetry_se    fractal_dimension_se            radius_worst 
##             -0.04249842             -0.10256832             -0.22799663 
##           texture_worst         perimeter_worst              area_worst 
##             -0.10446933             -0.23663968             -0.22487053 
##        smoothness_worst       compactness_worst         concavity_worst 
##             -0.12795256             -0.21009588             -0.22876753 
##    concave.points_worst          symmetry_worst fractal_dimension_worst 
##             -0.25088597             -0.12290456             -0.13178394
```



```r
# Scale the wisc.data data: data.scaled
library(scales)
data.scaled <- apply(wisc.data, MARGIN = 2, FUN=rescale)
head(data.scaled)
```

```
##          radius_mean texture_mean perimeter_mean area_mean smoothness_mean
## 842302     0.5210374    0.0226581      0.5459885 0.3637328       0.5937528
## 842517     0.6431445    0.2725736      0.6157833 0.5015907       0.2898799
## 84300903   0.6014956    0.3902604      0.5957432 0.4494168       0.5143089
## 84348301   0.2100904    0.3608387      0.2335015 0.1029056       0.8113208
## 84358402   0.6298926    0.1565776      0.6309861 0.4892895       0.4303512
## 843786     0.2588386    0.2025702      0.2679842 0.1415058       0.6786133
##          compactness_mean concavity_mean concave.points_mean symmetry_mean
## 842302          0.7920373      0.7031396           0.7311133     0.6863636
## 842517          0.1817680      0.2036082           0.3487575     0.3797980
## 84300903        0.4310165      0.4625117           0.6356859     0.5095960
## 84348301        0.8113613      0.5656045           0.5228628     0.7762626
## 84358402        0.3478928      0.4639175           0.5183897     0.3782828
## 843786          0.4619962      0.3697282           0.4020378     0.5186869
##          fractal_dimension_mean  radius_se texture_se perimeter_se
## 842302                0.6055181 0.35614702 0.12046941   0.36903360
## 842517                0.1413227 0.15643672 0.08258929   0.12444047
## 84300903              0.2112468 0.22962158 0.09430251   0.18037035
## 84348301              1.0000000 0.13909107 0.17587518   0.12665504
## 84358402              0.1868155 0.23382220 0.09306489   0.22056260
## 843786                0.5511794 0.08075321 0.11713225   0.06879329
##             area_se smoothness_se compactness_se concavity_se
## 842302   0.27381126     0.1592956     0.35139844   0.13568182
## 842517   0.12565979     0.1193867     0.08132304   0.04696970
## 84300903 0.16292179     0.1508312     0.28395470   0.09676768
## 84348301 0.03815479     0.2514532     0.54321507   0.14295455
## 84358402 0.16368757     0.3323588     0.16791841   0.14363636
## 843786   0.03808008     0.1970629     0.23431069   0.09272727
##          concave.points_se symmetry_se fractal_dimension_se radius_worst
## 842302           0.3006251  0.31164518            0.1830424    0.6207755
## 842517           0.2538360  0.08453875            0.0911101    0.6069015
## 84300903         0.3898466  0.20569032            0.1270055    0.5563856
## 84348301         0.3536655  0.72814769            0.2872048    0.2483102
## 84358402         0.3570752  0.13617943            0.1457996    0.5197439
## 843786           0.2153817  0.19372995            0.1446596    0.2682319
##          texture_worst perimeter_worst area_worst smoothness_worst
## 842302       0.1415245       0.6683102 0.45069799        0.6011358
## 842517       0.3035714       0.5398177 0.43521431        0.3475533
## 84300903     0.3600746       0.5084417 0.37450845        0.4835898
## 84348301     0.3859275       0.2413467 0.09400806        0.9154725
## 84358402     0.1239339       0.5069476 0.34157491        0.4373638
## 843786       0.3126333       0.2639076 0.13674794        0.7127386
##          compactness_worst concavity_worst concave.points_worst
## 842302           0.6192916       0.5686102            0.9120275
## 842517           0.1545634       0.1929712            0.6391753
## 84300903         0.3853751       0.3597444            0.8350515
## 84348301         0.8140117       0.5486422            0.8848797
## 84358402         0.1724151       0.3194888            0.5584192
## 843786           0.4827837       0.4277157            0.5982818
##          symmetry_worst fractal_dimension_worst
## 842302        0.5984624               0.4188640
## 842517        0.2335896               0.2228781
## 84300903      0.4037059               0.2134330
## 84348301      1.0000000               0.7737111
## 84358402      0.1575005               0.1425948
## 843786        0.4770353               0.4549390
```

```r
data.dist <- dist(data.scaled)

wisc.hclust <- hclust(data.dist, method="complete")

plot(wisc.hclust)
```

![plot of chunk unnamed-chunk-9](figure/unnamed-chunk-9-1.png)


```r
wisc.hclust.k2 <- cutree(wisc.hclust, k=2)
table(wisc.hclust.k2, diagnosis)
```

```
##               diagnosis
## wisc.hclust.k2   B   M
##              1   0  98
##              2 357 114
```

```r
wisc.hclust.k3 <- cutree(wisc.hclust, k=3)
table(wisc.hclust.k3, diagnosis)
```

```
##               diagnosis
## wisc.hclust.k3   B   M
##              1   0  98
##              2 344  51
##              3  13  63
```

```r
wisc.hclust.k4 <- cutree(wisc.hclust, k=4)
table(wisc.hclust.k4, diagnosis)
```

```
##               diagnosis
## wisc.hclust.k4   B   M
##              1   0  96
##              2 344  51
##              3  13  63
##              4   0   2
```

```r
wisc.hclust.k5 <- cutree(wisc.hclust, k=5)
table(wisc.hclust.k5, diagnosis)
```

```
##               diagnosis
## wisc.hclust.k5   B   M
##              1   0  96
##              2 344  51
##              3   2   7
##              4  11  56
##              5   0   2
```

```r
wisc.hclust.k10 <- cutree(wisc.hclust, k=10)
table(wisc.hclust.k10, diagnosis)
```

```
##                diagnosis
## wisc.hclust.k10   B   M
##              1    0  13
##              2  138  47
##              3    0  83
##              4    0   7
##              5    8  49
##              6    3   7
##              7   61   2
##              8  145   2
##              9    2   0
##              10   0   2
```

# clustering with PCA


```r
wisc.hc.pr <- hclust(dist(wisc.pr$x[,1:2]), method="ward.D2")
#plot(wisc.hc.pr) 
grps <- cutree(wisc.hc.pr, k=2)
table(grps, diagnosis)
```

```
##     diagnosis
## grps   B   M
##    1  18 177
##    2 339  35
```

```r
plot(wisc.pr$x[ ,1:2], col=grps, pch=20+(diagnosis=="M"))
```

![plot of chunk unnamed-chunk-11](figure/unnamed-chunk-11-1.png)






